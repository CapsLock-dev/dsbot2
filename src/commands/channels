
import { SlashCommandBuilder, ChatInputCommandInteraction, GuildMember, ActionRowBuilder, ButtonBuilder, SelectMenuBuilder, ButtonStyle, SelectMenuInteraction, ButtonInteraction, SelectMenuComponent, ComponentType, EmbedBuilder} from "discord.js"
import { Command } from "../interfaces"
import { addUser, getBalance, updateBalance, getInventory} from "../db"

export const command: Command = {
    data: new SlashCommandBuilder()
        .setName('channels')
        .setDescription('Редактирование личного канала'),
    exec: async (client, interaction: ChatInputCommandInteraction) => {
        if (!interaction.member) return
        const member = interaction.member as GuildMember
        if (!(await getInventory(client.pool, member.id)).filterArray('channels')) {
            interaction.reply('У вас нет ни одного личного канала')
            return
        }

        async function sendEditMenu() {
            const emb = new EmbedBuilder()
                .setTitle('Редактирование канала')
                .setDescription()
            const menu: any = new ActionRowBuilder()
                .addComponents(
                    new ButtonBuilder()
                        .setCustomId('add_user')
                        .setLabel('Добавить пользователя')
                        .setStyle(ButtonStyle.Primary),
                    new ButtonBuilder()
                        .setCustomId('remove_user')
                        .setLabel('Убрать пользователя')
                        .setStyle(ButtonStyle.Primary),
                    new ButtonBuilder()
                        .setCustomId('edit_name')
                        .setLabel('Изменить название')
                        .setStyle(ButtonStyle.Primary),
                    new ButtonBuilder()
                        .setCustomId('return')
                        .setLabel('Назад')
                        .setStyle(ButtonStyle.Danger)
            )
        }

        const channelList = (await getInventory(client.pool, member.id)).filterArray('channels')
        const options = []
        for (const channelId in channelList) {
            const channel = member.guild.channels.cache.find(c => c.id === channelId)
            if (channel) {
                options.push({ label: channel.name, description: 'Нажмите чтобы редактировать', value: channelId })
            }
        }
        const channelMenu: any = new ActionRowBuilder()
            .addComponents(
                new SelectMenuBuilder()
                    .setCustomId('channelMenu')
                    .setPlaceholder('Выберите канал для редактирования')
                    .setMaxValues(1)
                    .setMinValues(1)
                    .addOptions(options),
            )
        const closeBtn: any = new ActionRowBuilder()
            .addComponents(
                new ButtonBuilder()
                    .setCustomId('close')
                    .setLabel('Закрыть')
                    .setStyle(ButtonStyle.Secondary)
            )
        const msg = await interaction.reply({components: [channelMenu, returnBtn], fetchReply: true})
        const collector = msg.createMessageComponentCollector({ time: 60000 * 5 })
        let chosenChannel
        collector.on('collect', async (i: SelectMenuInteraction | ButtonInteraction) => {
            switch(i.componentType) {
                case ComponentType.SelectMenu:
                    const value = i.values[0]
                    if (member.guild.channels.cache.find(r => r.id === value)) {
                        
                    } else {
                        member.roles.add(value)
                    }
                    break
                case ComponentType.Button:
                    collector.stop()
                    break
            }
        })
        collector.on('end', async () => {
            msg.delete()
        })
    }
}
